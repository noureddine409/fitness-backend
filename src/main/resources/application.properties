# db config

spring.datasource.url=jdbc:postgresql://${DATABASE_HOST:localhost}:${DATABASE_PORT:5432}/${POSTGRES_DB:postgres}
spring.datasource.username=${DATABASE_USERNAME:postgres}
spring.datasource.password=${DATABASE_PASSWORD:maroc123}
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update

# config swagger ui
spring.mvc.pathmatch.matching-strategy=${SWAGGER_MATCHING_STRATEGY:ANT_PATH_MATCHER}

# JWT
jwt.access-token.secret=${ACCESS_TOKEN_SECRET:0xMRxeBsmtIh0T8TkgvzhHQdmfy3rc1drOn1RJanhuDNcw10IfqbgE2ES0MJk662RYtGdR21exjIVavRko1fjen8WgySRStwjguS}
jwt.access-token.expiration-in-mins=${ACCESS_TOKEN_EXPIRATION_MINS:10}
jwt.refresh-token.secret=${REFRESH_TOKEN_SECRET:yHPki144tivFxu2Nk3josX2URsdjNz24ZJWB9fimJPkt7gYqiWCvV7lvNynrK6LDX9nUKPvqWHXPuf5ne8e7qYZM0p4EgGWSsi1d}
jwt.refresh-token.expiration-in-weeks=${REFRESH_TOKEN_EXPIRATION_WEEKS:2}
jwt.reset-token.secret=${RESET_TOKEN_SECRET:yHPki144tivFxu2Nk3josX2URsdjNz24ZJWB9fimJPkt7gYqiWCvV7lvNynrK6LDX9nUKPvqWHXPuf5ne8e7qYZM0p4EgGWSsi1d}
jwt.reset-token.expiration-in-mins=${RESET_TOKEN_EXPIRATION_MINS:10}
jwt.token.issuer=${TOKEN_ISSUER:Sport Network}

# CORS
cors.allowed-origins=${CORS_ALLOWED_ORIGINS:*}
cors.allowed-heathers=${CORS_ALLOWED_HEADERS:Origin, Content-Type, Accept, Authorization}
cors.allowed-methods=${CORS_ALLOWED_METHODS:GET, POST, PUT, PATCH, DELETE}

# Auth white /block-list
jwt.auth.white-list=${AUTH_WHITE_LIST:/api/auth/**, /api/programs/search/**, /api/users/search/trainers, /api/blogs/search/**, /api/contact-us}
form.auth.white-list=${FORM_AUTH_WHITE_LIST:/login*, /logout*}
form.auth.block-list=${FORM_AUTH_BLOCK_LIST:/swagger-ui/**, /v3/api-docs/**}
jwt.auth.admin=${AUTH_ADMIN:/api/joins/treat/**, /api/programs/*/validate, /api/joins/requests, /api/programs/*/archive}
jwt.auth.trainer=${AUTH_TRAINER:/api/programs/me, /api/programs/create-program, /api/blogs/create-blog}
jwt.auth.user=${AUTH_USER:}

# Form login/logout
form.login.remember-me.key=${REMEMBER_ME_KEY:Xy9ZTOhbfu9O6F0x9Hc9Th4XW9HsAucyKROaZwVdtuTmdkjSkf0oeN5wZXwFgvX1f4ismFvTmRspIDdo8DYwkSRWcCZSL}
form.login.remember-me.token-validity-in-days=${REMEMBER_ME_VALIDITY_DAYS:1}
form.success.url=${SUCCESS_URL:/swagger-ui/index.html}
form.logout.cookies-to-clear=${LOGOUT_COOKIES:JSESSIONID, remember-me}

# MAIL SENDER
spring.mail.host=${MAIL_HOST:smtp.gmail.com}
spring.mail.port=${MAIL_PORT:587}
spring.mail.username=${MAIL_USERNAME:noureddinelachgar9@gmail.com}
spring.mail.password=${MAIL_PASSWORD:mltaajxnyuxdkicp}
spring.mail.properties.mail.smtp.auth=${MAIL_SMTP_AUTH:true}
spring.mail.properties.mail.smtp.starttls.enable=${MAIL_STARTTLS_ENABLE:true}

# ADMIN CREDENTIALS
admin.account.username=${ADMIN_USERNAME:admin@admin.me}
admin.account.password=${ADMIN_PASSWORD:admin@fitness654}
admin.account.name=${ADMIN_NAME:admin}

# trainer account
trainer.account.username=${TRAINER_USERNAME:trainer@domain.me}
trainer.account.password=${TRAINER_PASSWORD:trainer_123}
trainer.account.name=${TRAINER_NAME:admin}

# dev account
dev.account.username=${DEV_USERNAME:dev@domain.me}
dev.account.password=${DEV_PASSWORD:dev_123}
dev.account.name=${DEV_NAME:admin}

# default profile picture
user.default-profile-picture=${DEFAULT_PROFILE_PICTURE:https://i.pinimg.com/originals/f1/0f/f7/f10ff70a7155e5ab666bcdd1b45b726d.jpg}

# amazon s3 config
amazon.aws.access-key=${AWS_ACCESS_KEY:}
amazon.aws.secret-key=${AWS_SECRET_KEY:}
amazon.aws.region=${AWS_REGION:eu-west-3}
s3.bucket.name=${S3_BUCKET_NAME:my-fitness-app}

# google auth config
google.clientId=${GOOGLE_CLIENT_ID:}

# facebook auth config
spring.social.facebook.appId=${FACEBOOK_APP_ID:}
spring.social.facebook.appSecret=${FACEBOOK_APP_SECRET:}

# origin url
origin.url=${ORIGIN_URL:http://localhost:4200}

# paypal config
paypal.clientId=${PAYPAL_CLIENT_ID:}
paypal.clientSecret=${PAYPAL_CLIENT_SECRET:}
paypal.order.return-url=${PAYPAL_RETURN_URL:http://localhost:4200/complete}
paypal.order.cancel-url=${PAYPAL_CANCEL_URL:http://localhost:4200/cancel}

# request size config
spring.servlet.multipart.max-file-size=${MAX_FILE_SIZE:10MB}
spring.servlet.multipart.max-request-size=${MAX_REQUEST_SIZE:10MB}

# RapidAPI currency conversion config
rapid-api.api-endpoint=${RAPID_API_ENDPOINT:https://currency-converter-by-api-ninjas.p.rapidapi.com/v1/convertcurrency}
rapid-api.api-key=${RAPID_API_KEY:}
rapid-api.api_host=${RAPID_API_HOST:currency-converter-by-api-ninjas.p.rapidapi.com}

# currency code config
paypal.currency.code=${PAYPAL_CURRENCY_CODE:USD}
app.currency.code=${APP_CURRENCY_CODE:MAD}

# kafka config
kafka.topic.name=${KAFKA_TOPIC_NAME:t.fitness.notification}
kafka.topic.partitions=${KAFKA_TOPIC_PARTITIONS:1}
kafka.topic.replicas=${KAFKA_TOPIC_REPLICAS:1}
spring.kafka.consumer.group-id=${KAFKA_CONSUMER_GROUP_ID:default}
